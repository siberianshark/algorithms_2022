"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для третьего скрипта
"""

# recordclass vs defaultdict


from collections import defaultdict
from recordclass import recordclass
from numpy import number
import sys

a = input('Введите первое число: ')
b = input('Введите второе число: ')

ddict = defaultdict(list)
ddict[1] = list(a)
ddict[2] = list(b)
print(ddict)

# c = hex(int(''.join(str(i) for i in ddict[1]), 16) * int(''.join(str(i) for i in ddict[2]), 16))
# d = hex(int(''.join(str(i) for i in ddict[1]), 16) + int(''.join(str(i) for i in ddict[2]), 16))
# print(f'Сумма: {list(d[2:].upper())}')
# print(f'Произведение: {list(c[2:].upper())}')

rec_val = recordclass('rec_val', ('x', 'y'))

rec_val = rec_val(x=list(a), y=list(b))
print(rec_val)

print(f'Объём занимаемой объектом recordclass памяти: {sys.getsizeof(rec_val)} байт(а)')
print(f'Объём занимаемой объектом ddict памяти: {sys.getsizeof(ddict)} байт(а)')


#Объём занимаемой объектом recordclass памяти: 40 байт(а)
#Объём занимаемой объектом ddict памяти: 240 байт(а)
#Объем занимаемой памяти recordclass в 5 раз меньше, чем ddict.
#Поэтому выполнение объемных алгоритмов будет испольняться в разы быстрее.
