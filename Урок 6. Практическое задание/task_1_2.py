"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для второго скрипта
"""
# 2 Изменение типа __slots__ в class

from pympler import asizeof
from timeit import timeit


class HexNumber:
    def __init__(self, num_1,num_2):
        self.num_1 = num_1
        self.num_2 = num_2


simple_int_1 = '1a3'
simple_int_2 = '3de'
a = HexNumber(simple_int_1, simple_int_2)
print(asizeof.asizeof((a)))                                     # asizeof.asizeof = 376

class HexNumber:
    __slots__ = ('num_1', 'num_2')
    def __init__(self, num_1,num_2):
        self.num_1 = num_1
        self.num_2 = num_2


simple_int_1 = '1a3'
simple_int_2 = '3de'
a = HexNumber(simple_int_1, simple_int_2)
print(asizeof.asizeof((a)))                                     # asizeof.asizeof = 160


#Использование __slots__ приводит к изменению типа данных для хранения.
#По умолчанию используется dict, и так как его идентификаторы/ключи ХЕШируются,
#данные занимают вдвое больше памяти, например, по сравнению с tuple!
#asizeof.asizeof = 376 без использования __slots__
#asizeof.asizeof = 160 с использования __slots__
